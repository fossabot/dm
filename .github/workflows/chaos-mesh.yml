name: chaos

# Controls when the action will run. Triggers the workflow on pull request
# events but only for the master and release-2.0 branch
on:
  pull_request:
    branches:
    - master
    - release-2.0

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "base"
  base:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Set up Go for building DM, now it's v1.13
    - name: Set up Go 1.13
      uses: actions/setup-go@v2
      with:
        go-version: 1.13
    - name: Print Go version
      run: go version
  
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Check out code
      uses: actions/checkout@v2
    - name: Print current git commit hash
      run: git rev-parse HEAD
    
    # Set up Kubernetes IN Docker
    - name: Set up kind cluster 
      uses: helm/kind-action@v1.0.0
    - name: Print cluster information
      run: |
        kubectl config view
        kubectl cluster-info
        kubectl get nodes
        kubectl get pods -n kube-system
        kubectl get sc
        helm version
        kubectl version
    
    # Disable AppArmor for MySQL, see https://github.com/moby/moby/issues/7512#issuecomment-61787845
    - name: Disable AppArmor for MySQL
      run: |
        sudo ln -s /etc/apparmor.d/usr.sbin.mysqld /etc/apparmor.d/disable/
        sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.mysqld

     # Set up upstream MySQL instances
    - name: Set up MySQL
      run: |
         kubectl apply -f $GITHUB_WORKSPACE/chaos/manifests/mysql.yaml
         kubectl get -f $GITHUB_WORKSPACE/chaos/manifests/mysql.yaml
         kubectl describe -f $GITHUB_WORKSPACE/chaos/manifests/mysql.yaml
    - name: Wait for MySQL ready
      run: |
         kubectl wait --for=condition=Ready pod/mysql-0 --timeout=120s || true
         kubectl get -f $GITHUB_WORKSPACE/chaos/manifests/mysql.yaml
         kubectl describe -f $GITHUB_WORKSPACE/chaos/manifests/mysql.yaml
         echo show pv
         kubectl get pv -o wide
         echo show svc
         kubectl get svc -o wide
         echo show sts
         kubectl get sts -o wide
         echo show po
         kubectl get po -o wide
         echo descirbe po
         kubectl describe po mysql-0
         echo log po
         kubectl logs mysql-0
         kubectl wait --for=condition=Ready pod/mysql-0 --timeout=0s

    # TODO: build & deploy DM; run chaos mesh action
    # Runs a single command using the runners shell
    - name: Run a one-line script
      run: echo Hello, world!

    # Runs a set of commands using the runners shell
    - name: Run a multi-line script
      run: |
        echo Add other actions to build,
        echo test, and deploy your project.
